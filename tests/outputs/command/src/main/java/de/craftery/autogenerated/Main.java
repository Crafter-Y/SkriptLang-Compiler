package de.craftery.autogenerated;

import de.craftery.autogenerated.command.DiamondCommand;
import de.craftery.autogenerated.command.OddsCommand;
import de.craftery.autogenerated.command.StaffannounceCommand;
import java.util.HashMap;
import java.util.Map;
import org.bukkit.Bukkit;
import org.bukkit.command.PluginCommand;
import org.bukkit.plugin.java.JavaPlugin;

public final class Main extends JavaPlugin {
    private static Main instance;
    private static final Map<String, Map<String, Long>> cooldowns = new HashMap<>();

    @Override
    public void onEnable() {
        instance = this;
        PluginCommand staffannounceCommand = Bukkit.getPluginCommand("staffannounce");
        if (staffannounceCommand != null) {
            staffannounceCommand.setExecutor(new StaffannounceCommand());
        }
        PluginCommand diamondCommand = Bukkit.getPluginCommand("diamond");
        if (diamondCommand != null) {
            diamondCommand.setExecutor(new DiamondCommand());
        }
        PluginCommand oddsCommand = Bukkit.getPluginCommand("odds");
        if (oddsCommand != null) {
            oddsCommand.setExecutor(new OddsCommand());
        }
    }
    
    @Override
    public void onDisable() {
        PluginCommand staffannounceCommand = Bukkit.getPluginCommand("staffannounce");
        if (staffannounceCommand != null) {
            staffannounceCommand.setExecutor(null);
        }
        PluginCommand diamondCommand = Bukkit.getPluginCommand("diamond");
        if (diamondCommand != null) {
            diamondCommand.setExecutor(null);
        }
        PluginCommand oddsCommand = Bukkit.getPluginCommand("odds");
        if (oddsCommand != null) {
            oddsCommand.setExecutor(null);
        }
    }
    
    public static Main getInstance() {
        return instance;
    }
    
    public static Long getCooldown(String sender, String command) {
        if (cooldowns.get(command) == null) {
            return 0L;
        } else if (cooldowns.get(command).get(sender) == null) {
            return 0L;
        } else {
            return cooldowns.get(command).get(sender);
        }
    }
    
    public static void setCooldown(String sender, String command, Long cooldown) {
        Map<String, Long> commandMap = cooldowns.get(command);
        if (commandMap == null) commandMap = new HashMap<>();
        commandMap.put(sender, System.currentTimeMillis() + cooldown);
        cooldowns.put(command, commandMap);
    }
    
}

